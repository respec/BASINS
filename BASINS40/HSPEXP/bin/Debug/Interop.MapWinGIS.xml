<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Interop.MapWinGIS</name>
    </assembly>
    <members>
        <member name="T:MapWinGIS.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:MapWinGIS.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:MapWinGIS.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:MapWinGIS.IShapefile">
            <summary>
            A class which encapsulates all the operation with ESRI shapefiles, for both file-based and in-memory mode.
            Facilitates creation, editing, quering and geoprocessing of shapefiles. Shapefile holds geometry of objects 
            (.shp and .shx part) and their attribute values (.dbf part)
            </summary>
        </member>
        <member name="M:MapWinGIS.IShapefile.AggregateShapes(System.Boolean,System.Int32)">
            <summary>
            Creates a new instance shapefile class with shapes aggregated based on the value of the specified field.
            Aggregation means creation of a single multi-part shape from several single-part or multi-part input shapes.
            </summary>
            <param name="SelectedOnly">Only selected shapes will be included in the RESULT</param>
            <param name="FieldIndex">The index of field to group shapes by (all the shapes with the same value of this field
            will form one aggregated shape).</param>
            <returns>Reference to the shapefile on success or NULL reference on failure. 
            Use Shapefile.ErrorMsg(Shapefile.LastErrorCode) to find out the reason of failure.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.Clone">
            <summary>
            Creates in-memory copy of the shapefile of the same type and with the same fields in attribute table.
            Shapes and their attributes aren't copied.
            </summary>
        </member>
        <member name="M:MapWinGIS.IShapefile.Close">
            <summary>
            Closes shapefile and releases all the resources. In case shapefile was in editing mode 
            (Shapefile.EditingShapes = true), all the edits will be discarded.
            </summary>
            <returns>Returns true on correct closing of editing mode. This value can be skipped.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MapWinGIS.IShapefile.CreateNew(System.String,MapWinGIS.ShpfileType)" -->
        <!-- Badly formed XML comment ignored for member "M:MapWinGIS.IShapefile.CreateNewWithShapeID(System.String,MapWinGIS.ShpfileType)" -->
        <member name="M:MapWinGIS.IShapefile.Deserialize(System.Boolean,System.String)">
            <summary>
            Restores the state of shapefile from provided string. The string must be generated by Shapefile.Serialize method.
            
            </summary>
            <param name="LoadSelection">Determines whether selection state of individual shapes shuld be loaded.</param>
            <param name="newVal">A string to restore values from.</param>
        </member>
        <member name="M:MapWinGIS.IShapefile.Serialize(System.Boolean)">
            <summary>
            Saves the state of the shapefile in XML-formatted string. Serialization covers shapefile properties and all child classes 
            (drawing options, labels, charts, categories). Geometry of shapes and values of attribute table will not be serialized.
            </summary>
            <param name="SaveSelection">Determines with selection state of individual shapes shuld be saved.</param>
            <returns>XML-formatted string or empty string on failure.
            Use Shapefile.ErrorMsg(Shapefile.LastErrorCode) to find out the reason of failure.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.EditCellValue(System.Int32,System.Int32,System.Object)">
            <summary>
            Sets the new value for particular cell in attribute table. The table must be in editing mode 
            (see Shapefile.EditingTable propety).
            </summary>
            <param name="FieldIndex">The index of field in attribute table</param>
            <param name="ShapeIndex">The index of shape (row number) in attribute table</param>
            <param name="newVal">The variant value to be passed (integer, double and string values are accepted depending on field type)</param>
            <returns></returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.EditClear">
            <summary>
            Deletes all the shapes from shapefile and cooresponding records from the attribute table. 
            Both shapefile and attribute table should be in editing mode. See (see Shapefile.EditingTable and Shapefile.EditingShapes properties).
            </summary>
            <returns>Returns true on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.EditDeleteField(System.Int32,MapWinGIS.ICallback)">
            <summary>
            Deletes a field with the specified index from the attribute table. The table must be in editing mode 
            (see Shapefile.EditingTable propety).
            </summary>
            <param name="FieldIndex">An index of field to delete.</param>
            <param name="cBack">An instance of class implementing ICallback interface. Use Shapefile.GlobalCallback property instead.</param>
            <returns>Returns true on success and false otherwise</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.EditDeleteShape(System.Int32)">
            <summary>
            Delete shape with the specified index from shapefile. 
            Both shapefile and attribute table should be in editing mode. See (see Shapefile.EditingTable and Shapefile.EditingShapes properties).
            </summary>
            <param name="ShapeIndex">The index of shape to delete.</param>
            <returns>Returns true on success and false otherwise</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.EditInsertField(MapWinGIS.Field,System.Int32@,MapWinGIS.ICallback)">
            <summary>
            Inserts a new field in the shapefile attribute table.
            </summary>
            <param name="NewField">A new instance of field object to insert.</param>
            <param name="FieldIndex">A position to insert the new field. An ivalid index will be automatically substituted with 0 ot numFields</param>
            <param name="cBack">An instance of class implementing ICallback interface. Pass NULL and use Shapefile.GlobalCallback property if needed.</param>
            <returns>True on success and false otherwise</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.EditInsertShape(MapWinGIS.Shape,System.Int32@)">
            <summary>
            Inserts a new shape in the shapefile.
            </summary>
            <param name="NewField">A new instance of shape object to insert.</param>
            <param name="FieldIndex">A position to insert the new shape. An ivalid index will be automatically substituted with 0 ot numShapes</param>
            <param name="cBack">An instance of class implementing ICallback interface. Pass NULL and use Shapefile.GlobalCallback property if needed.</param>
            <returns>True on success and false otherwise</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.ExplodeShapes(System.Boolean)">
            <summary>
            Creates a new instance of shapefile class with single-part shapes produced from the multi-part shapes of the input shapefile. 
            Single input shapes are moved to the output shapefile without changed as well as the values from attribute table.
            </summary>
            <param name="SelectedOnly">Indicates whether the operation should be applied only to the selected shapes.</param>
            <returns>A new instance of Shapefile class with resultant shapes or NULL reference on failure.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.ExportSelection">
            <summary>
            Creates a new instance of the shapefile class and copies selected shapes of the input shapefile to it.
            </summary>
            <returns>A new instance of shapefile class with selected shapes or NULL reference on failure</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.GenerateLabels(System.Int32,MapWinGIS.tkLabelPositioning,System.Boolean)">
            <summary>
            Generates labels for the shapefile based on values of the specified field in attribute table.
            </summary>
            <param name="FieldIndex">The index of field to take the values from</param>
            <param name="Method">The method for calculation of label position.</param>
            <param name="LargestPartOnly">Determines whether all the parts of the multi-part shape should be supplied with individual label or only the largest (longest) one</param>
            <returns>The number of labels generated. Normally it must be equal to the number of shapes.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.GetIntersection(System.Boolean,MapWinGIS.Shapefile,System.Boolean,MapWinGIS.ShpfileType,MapWinGIS.ICallback)">
            <summary>
            Creates a new instance of shapefile class which holdes the results of per-shape intersection of 2 input shapefiles.
            Attribute table of resulting shapefile holds fields from both input shapefile. 
            </summary>
            <param name="SelectedOnlyOfThis">Indicates whether operation will be applied to the selected shapes of the current shapefile only.</param>
            <param name="sf">The second shapefile to perfrom intersection.</param>
            <param name="SelectedOnly">Indicates whether operation will be applied to the selected shapes of the current shapefile only.</param>
            <param name="fileType">The type of output shapefiles. SHP_NULLSHAPE value should be passed for automatic choosing of type. See remarks.</param>
            <param name="cBack">An instance of class implementing ICallback interface. It's recommedded to pass NULL and use Shapefile.GlobalCallback property if needed.</param>
            <returns>Reference to the resulting shapefile or NULL reference on failure</returns>
            <remarks>Intesection operation can generate shapes of different types. For example, the intersection of 2 polygons can be
            a polygon, a polyline, a point or any combination of those. With SHP_NULLSHAPE fileType paramater the most obvious type will be used:
            for example, SHP_POLYGON for 2 polygon shapefiles, etc. Specify you own fileType if the default value isn't returning the expected type</remarks>
        </member>
        <member name="M:MapWinGIS.IShapefile.InvertSelection">
            <summary>
            Inverts selection of the shapefile, i.e. selection state of every shape is changed to the opposite one.
            See Shapefile.get_ShapeSelected property.
            </summary>
        </member>
        <member name="M:MapWinGIS.IShapefile.Merge(System.Boolean,MapWinGIS.Shapefile,System.Boolean)">
            <summary>
            Creates a new instance of shapefile class which holds shapes from 2 input shapefiles. No changes to geometry of individual shapes are made.
            Fields and values from attribute values of both input shapefile will be passed to the resuting one.
            </summary>
            <param name="SelectedOnlyThis">Indicates whether the operation will be applied only to the selected shapes of the current shapefile</param>
            <param name="sf">The second shapefile to take shapes from</param>
            <param name="SelectedOnly">Indicates whether the operation will be applied only to the selected shapes of the second shapefile</param>
            <returns></returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.Open(System.String,MapWinGIS.ICallback)">
            <summary>
            Opens shapefile from the disk. Any other shapefile currently opened will be closed wihout saving the changes.
            Shapefile.SourceType property will be set to sstDiskBased.
            </summary>
            <param name="ShapefileName">The name of file with .shp extention to open.</param>
            <param name="cBack">A instance of class which implements ICallback interface to report errors and progrees information</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.PointInShape(System.Int32,System.Double,System.Double)">
            <summary>
            Returns boolean value which indicates whether the given point is located whithin the specified shape.
            The operation is applicable for polygon shapefiles only.
            </summary>
            <param name="ShapeIndex">The index shape (polygon) to perfrom the test</param>
            <param name="x">X coordinate of the point</param>
            <param name="y">Y coordinate of the point</param>
            <returns>True in case the point is located within polygon and false otherwise</returns>
        </member>
        <member name="P:MapWinGIS.IShapefile.Categories">
            <summary>
            Gets or sets an instance of ShapefileCategories class associated with shapefile. 
            The property can't be set to NULL (there is always an instance ShapefileCategories class associated with it).
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefile.CdlgFilter">
            <summary>
            Gets expression to be set for OpenFileDialog.Filter property to select ESRI shapefiles.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefile.Charts">
            <summary>
            Gets or sets an instance of Charts class associated with shapefile. 
            The property can't be set to NULL (there is always an instance of Charts class associated with it).
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefile.CollisionMode">
             <summary>
             Sets collision mode for shapefile labels and charts.
             </summary>
            <value></value>
        </member>
        <member name="P:MapWinGIS.IShapefile.DefaultDrawingOptions">
            <summary>
            Gets or sets an instance of ShapeDrawingOptions class which holds default drawing options. 
            Default options are applied for every shape, which doesn't belong to any shapefile category and doesn't fall into selection.
            The property can't be set to NULL (there is always an instance ShapeDrawingOptions class associated with it).
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefile.EditingShapes">
            <summary>
            Gets the value indicating whether editing operation are allowed for shapefile.
            Shapefile.EditInsertShape, Shapefile.EditDeleteShape, Shapefile.EditClear are affected by this property.
            Use Shapefile.StartEditingShapes and Shapefile.StopEditingShapes to control editing mode.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefile.EditingTable">
            <summary>
            Gets the value indicating whether editing operation are allowed for shapefile attribute table.
            EditInsertField, EditDeleteField, EditInsertShape, EditDeleteShape, EditClear methods of shapefile class
            are affected by this property.
            Use Shapefile.StartEditingShapes and Shapefile.StopEditingShapes to control editing mode.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefile.Extents">
            <summary>
            Gets bounding box which holds all the shapes in the shapefile.
            When fast mode is set on, Shapefile.RefreshExtents call is needed to get the correct 
            extents after edits where made.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefile.FastMode">
            <summary>
            Gets or sets the fast mode for the shapefile. The mode ensures faster drawing but makes the user responsible 
            for the refreshing of shapefile extents after editing operation (see Shapefile.RefreshExtents and Shape.RefreshExtents).
            It's highly recomended to use the mode for large shapefile.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefile.Filename">
            <summary>
            Gets the filename of the file with .shp extention on disk which plays as a source for this instance of Shapefile class.
            The property should be used for disk-based shapefiles only (see Shapefile.SourceType property).
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefile.GeoProjection">
            <summary>
            Get or sets an instance of GeoProjection class, which holds information about Shapefile coordinate system and projection.
            GeoProjection can't be set to NULL (there is always an instance GeoProjection class associated with shapefile).
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefile.GeometryEngine">
            <summary>
            Gets or sets the engine (library) to use for geoprocessing operations.
            The following methods are affected by this property: 
            TODO: make list
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefile.GlobalCallback">
            <summary>
            Gets or sets an instance of class implementing ICallback interface, which handles progress and error messages of the Shapefile class.
            It's recommended to set it in case time consuming operation will be used (geoprocessing, generation of labels, etc).
            The property is equal to NULL by default.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:MapWinGIS.IShapefile.HasSpatialIndex" -->
        <member name="P:MapWinGIS.IShapefile.Key">
            <summary>
            A text string associated with shapefile. Any value can be stored by developer in this property.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefile.Labels">
            <summary>
            Gets or sets an instance of Labels class which hold information about text, position and appearance of labels associated with shapefile. 
            The property can't be set to NULL (there is always an instance Labels class associated with it).
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefile.LastErrorCode">
            <summary>
            Gets the code of last error which took place inside this instance of Shapefile class.
            To retrieve text description of error, use Shapefile.get_ErrorMsg(Shapefile.LastErrorCode).
            Check this value if a certaine method has failed.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefile.MinDrawingSize">
            <summary>
            Gets or sets the value which controls the drawing of small objects on screen. The objects with scaled size less
            than this value will be drawn as a single dot. This can noticeably increase perfromance for large shapefiles at full scale.
            But with the increase of speed the quality of drawing will be deteriorating. The default value is 1.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefile.NumFields">
            <summary>
            Gets the number of fields in attribute table of the shapefile.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefile.NumSelected">
            <summary>
            Gets the number of selected shapes in the shapefile. See Shapefile.ShapeSelected property.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefile.NumShapes">
            <summary>
            Gets the number of shapes in the shapefile.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefile.Projection">
            <summary>
            Gets or sets the projection string for shapefile. String in proj4 and ESRI WKT formats are supported.
            This property is deprecated, use Shapefile.GeoProjection property instead.
            </summary>
        </member>
        <member name="M:MapWinGIS.ICharts.AddField(MapWinGIS.ChartField)">
            <summary>
            Adds a field to the chart. The field will be represented as bar or sector depending on chart type.
            </summary>
            <param name="Field"></param>
            <returns></returns>
        </member>
        <member name="T:MapWinGIS.tkCollisionMode">
            <summary>
            Sets drawing behavior when overlapping labels and charts are present on map.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCollisionMode.AllowCollisions">
            <summary>
            Overlaps of labels (charts) are allowed. The subsequent labels (charts) will be drawn atop of the prior ones , thus hiding them.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCollisionMode.LocalList">
            <summary>
            The overlaps of labels (charts) of the same layer are prevented.
            But overlaps of labels (charts) of different layers are allowed.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCollisionMode.GlobalList">
            <summary>
            No overlaps of labels (charts) are allowed for both inside the layer and around layers.
            </summary>
        </member>
        <member name="M:MapWinGIS.IImage.Close">
            <summary>
            Closes the image
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
