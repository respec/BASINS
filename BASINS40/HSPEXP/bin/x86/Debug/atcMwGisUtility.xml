<?xml version="1.0"?>
<doc>
<assembly>
<name>
atcMwGisUtility
</name>
</assembly>
<members>
<member name="P:atcMwGisUtility.GisUtil.MappingObject">
	<summary>Map Window Object</summary>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="P:atcMwGisUtility.GisUtil.GetMappingObject">
	<summary>Map Window Object</summary>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="M:atcMwGisUtility.GisUtil.MapLayers">
	<summary>Layers on map</summary>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="M:atcMwGisUtility.GisUtil.FeatureIndexValid(System.Int32,MapWinGIS.Shapefile)">
	<summary>Check to see if feature index is valid</summary>
	<exception cref="T:System.Exception" caption="FeatureIndexOutOfRange">Feature Index Out of Range</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="M:atcMwGisUtility.GisUtil.LoadProject(System.String)">
	<summary>Load MapWindow project</summary>
	<param name="aProjectName">
		<para>Filename of project to load</para>
	</param>
	<remarks>Current directory not changed</remarks>
	<exception cref="T:System.Exception" caption="LoadFailure">Failure to Load Project</exception>
	<exception cref="T:System.IO.IOException" caption="FileNotFound">File Not Found</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="P:atcMwGisUtility.GisUtil.CurrentLayer">
	<summary>Current Layer Index (Handle)</summary>
	<exception cref="T:System.Exception" caption="LayerIndexOutOfRange">Layer specified by aLayerIndex does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="P:atcMwGisUtility.GisUtil.ShapeFileFromIndex(System.Int32)">
	<summary>Obtain pointer to a shape file from a LayerIndex</summary>
	<param name="aLayerIndex">
		<para>Index of Layer containing ShapeFile</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerNotShapeFile">Layer specified by aLayerIndex is not a ShapeFile</exception>
	<exception cref="T:System.Exception" caption="LayerIndexOutOfRange">Layer specified by aLayerIndex does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="P:atcMwGisUtility.GisUtil.PolygonShapeFileFromIndex(System.Int32)">
	<summary>Obtain pointer to a polygon shape file from a LayerIndex</summary>
	<param name="aLayerIndex">
		<para>Index of Layer containing ShapeFile</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerNotPolygonShapeFile">Layer specified by aLayerIndex is not a polygon ShapeFile</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="P:atcMwGisUtility.GisUtil.GridFromIndex(System.Int32)">
	<summary>Obtain pointer to a grid from a LayerIndex</summary>
	<param name="aLayerIndex">
		<para>Index of desired layer containing grid (defaults to Current Layer)</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerNotGrid">Layer specified by aLayerIndex is not a Grid</exception>
	<exception cref="T:System.Exception" caption="LayerIndexOutOfRange">Layer specified by aLayerIndex does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="P:atcMwGisUtility.GisUtil.LayerFromIndex(System.Int32)">
	<summary>Obtain pointer to a layer from a LayerIndex</summary>
	<param name="aLayerIndex">
		<para>Index of desired layer (defaults to Current Layer)</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerIndexOutOfRange">Layer specified by aLayerIndex does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="M:atcMwGisUtility.GisUtil.OverlappingPolygons(System.Int32,System.Int32,System.Int32,System.Int32)">
	<summary>Determine if polygons overlap</summary>
	<param name="aLayerIndex1">
		<para>Index of first Layer containing ShapeFile</para>
	</param>
	<param name="aFeatureIndex1">
		<para>Index of first feature</para>
	</param>
	<param name="aLayerIndex2">
		<para>Index of second Layer containing ShapeFile</para>
	</param>
	<param name="aFeatureIndex2">
		<para>Index of second feature</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerNotPolygonShapeFile">Layer specified by aLayerIndex is not a polygon ShapeFile</exception>
	<exception cref="T:System.Exception" caption="FeatureIndexOutOfRange">Feature Index Out of Range</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="M:atcMwGisUtility.GisUtil.LineInPolygon(System.Int32,System.Int32,System.Int32,System.Int32)">
	<summary>Given a line and a polygon, determine if any part of the line is in the polygon</summary>
	<param name="aLineLayerIndex">
		<para>Index of line Layer</para>
	</param>
	<param name="aLineIndex">
		<para>Index of line Feature</para>
	</param>
	<param name="aPolygonLayerIndex">
		<para>Index of second Layer containing ShapeFile</para>
	</param>
	<param name="aPolygonIndex">
		<para>Index of polygon Feature</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerNotPolygonShapeFile">Layer specified by aLayerIndex is not a polygon ShapeFile</exception>
	<exception cref="T:System.Exception" caption="FeatureIndexOutOfRange">Feature Index Out of Range</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="M:atcMwGisUtility.GisUtil.AssignContainingPolygons(System.Int32,System.Int32,System.Int32[]@)">
	<summary>given a polygon layer (like dem shape) and a containing layer (like subbasins), return which polygon in the containing layer each polygon lies within, determine if polygons overlap</summary>
	<param name="aLayerIndex">
		<para>Index of Layer containing polygon ShapeFile</para>
	</param>
	<param name="aLayerIndexContaining">
		<para>Index of Layer containing polygon ShapeFile</para>
	</param>
	<param name="aIndex">
		<para>Index of polygons from contained</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerNotPolygonShapeFile">Layer specified by aLayerIndex is not a polygon ShapeFile</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="P:atcMwGisUtility.GisUtil.NumFields(System.Int32)">
	<summary>Obtain number of fields in a shape file from a LayerIndex</summary>
	<param name="aLayerIndex">
		<para>Index of Layer containing ShapeFile</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerNotShapeFile">Layer specified by aLayerIndex is not a ShapeFile</exception>
	<exception cref="T:System.Exception" caption="LayerIndexOutOfRange">Layer specified by aLayerIndex does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="P:atcMwGisUtility.GisUtil.FieldIndexValid(System.Int32,MapWinGIS.Shapefile)">
	<summary>Obtain name of a field in a shape file from a layer index and a field index</summary>
	<param name="aFieldIndex">
		<para>Index of field to obtain name for</para>
	</param>
	<param name="aSf">
		<para>ShapeFile containing filed</para>
	</param>
	<exception cref="T:System.Exception" caption="FieldIndexOutOfRange">Field specified by aFieldIndex does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="P:atcMwGisUtility.GisUtil.FieldName(System.Int32,System.Int32)">
	<summary>Obtain name of a field in a shape file from a layer index and a field index</summary>
	<param name="aFieldIndex">
		<para>Index of field to obtain name for</para>
	</param>
	<param name="aLayerIndex">
		<para>Index of layer containing shape file</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerNotShapeFile">Layer specified by aLayerIndex is not a ShapeFile</exception>
	<exception cref="T:System.Exception" caption="LayerIndexOutOfRange">Layer specified by aLayerIndex does not exist</exception>
	<exception cref="T:System.Exception" caption="FieldIndexOutOfRange">Field specified by aFieldIndex does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="M:atcMwGisUtility.GisUtil.FieldIndex(System.Int32,System.String)">
	<summary>Obtain index of a field in a shape file from a layer index and a field name</summary>
	<param name="aFieldName">
		<para>Name of field to obtain index for</para>
	</param>
	<param name="aLayerIndex">
		<para>Index of layer containing shape file</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerNotShapeFile">Layer specified by aLayerIndex is not a ShapeFile</exception>
	<exception cref="T:System.Exception" caption="LayerIndexOutOfRange">Layer specified by aLayerIndex does not exist</exception>
	<exception cref="T:System.Exception" caption="FieldNameNotRecognized">Field specified by aFieldName is not recognized</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="M:atcMwGisUtility.GisUtil.AddField(System.Int32,System.String,System.Int32,System.Int32)">
	<summary>Add a field in a shape file from a layer index and a field name</summary>
	<param name="aLayerIndex">
		<para>Index of layer containing shape file</para>
	</param>
	<param name="aFieldName">
		<para>Name of field to add</para>
	</param>
</member><member name="M:atcMwGisUtility.GisUtil.AddField(System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
	<summary>Add a field in a shape file from a layer index and a field name</summary>
	<param name="aLayerIndex">
		<para>Index of layer containing shape file</para>
	</param>
	<param name="aFieldName">
		<para>Name of field to add</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerNotShapeFile">Layer specified by aLayerIndex is not a ShapeFile</exception>
	<exception cref="T:System.Exception" caption="LayerIndexOutOfRange">Layer specified by aLayerIndex does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="M:atcMwGisUtility.GisUtil.RemoveField(System.Int32,System.Int32)">
	<summary>Remove a field in a shape file from a layer index and a field name</summary>
	<param name="aLayerIndex">
		<para>Index of layer containing shape file</para>
	</param>
	<param name="aFieldIndex">
		<para>Index of field to remove</para>
	</param>
	<exception cref="T:System.Exception" caption="FieldIndexOutOfRange">Field specified by aFieldIndex does not exist</exception>
	<exception cref="T:System.Exception" caption="LayerNotShapeFile">Layer specified by aLayerIndex is not a ShapeFile</exception>
	<exception cref="T:System.Exception" caption="LayerIndexOutOfRange">Layer specified by aLayerIndex does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="P:atcMwGisUtility.GisUtil.NumLayers">
	<summary>Returns the number of layers loaded in the MapWindow. Drawing layers are not counted. </summary>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="P:atcMwGisUtility.GisUtil.LayerType(System.Int32)">
	<summary>Layer type from a layer index</summary>
	<param name="aLayerIndex">
		<para>Index of layer. (Defaults to current layer)</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerIndexOutOfRange">Layer specified by aLayerIndex does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="P:atcMwGisUtility.GisUtil.LayerName(System.Int32)">
	<summary>Layer name from a layer index</summary>
	<param name="aLayerIndex">
		<para>Index of layer (Defaults to current layer)</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerIndexOutOfRange">Layer specified by aLayerIndex does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="M:atcMwGisUtility.GisUtil.LayerIndex(System.String)">
	<summary>Index of a layer from a name</summary>
	<param name="aLayerName">
		<para>Name or filename of layer to obtain index for</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerNameNameNotRecognized">Layer specified by aLayerName does not exist</exception>
	<exception cref="T:System.Exception" caption="LayerIndexOutOfRange">Layer specified by aLayerIndex does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="P:atcMwGisUtility.GisUtil.LayerFileName(System.Int32)">
	<summary>Layer file name from a layer index</summary>
	<param name="aLayerIndex">
		<para>Index of layer (Defaults to current layer)</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerIndexOutOfRange">Layer specified by aLayerIndex does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="M:atcMwGisUtility.GisUtil.GroupIndex(System.String)">
	<summary>Index of a group from a name</summary>
	<param name="aGroupName">
		<para>Name of group to obtain index for</para>
	</param>
	<exception cref="T:System.Exception" caption="GroupNameNameNotRecognized">Group specified by aGroupName does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="M:atcMwGisUtility.GisUtil.LayerGroup(System.Int32)">
	<summary>
 Given a layer index, return the first associated group it is located in
 </summary>
	<param name="aLayerIndex">Index of layer</param>
	<returns>Name of group or empty string if cannot be found</returns>
	<remarks>Added by LCW 4/9/09 for GBMM project</remarks>
</member><member name="M:atcMwGisUtility.GisUtil.LayerGroup(System.String)">
	<summary>
 Given a layer name, return the associated group it is located in
 </summary>
	<param name="aLayerName">Name of layer</param>
	<returns>Name of group or empty string if cannot be found</returns>
	<remarks>Added by LCW 4/9/09 for GBMM project</remarks>
</member><member name="M:atcMwGisUtility.GisUtil.GroupHandle(System.String)">
	<summary>handle of a group from a name</summary>
	<param name="aGroupName">
		<para>Name of group to obtain handle for</para>
	</param>
	<exception cref="T:System.Exception" caption="GroupNameNameNotRecognized">Group specified by aGroupName does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="M:atcMwGisUtility.GisUtil.AddGroup(System.String)">
	<summary>
 Add group if it doesn't already exist; return group number
 </summary>
	<param name="aGroupName"></param>
	<returns></returns>
</member><member name="P:atcMwGisUtility.GisUtil.NumFeatures(System.Int32)">
	<summary>Number of features from a layer index</summary>
	<param name="aLayerIndex">
		<para>Index of layer (Defaults to current layer)</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerNotShapeFile">Layer specified by aLayerIndex is not a ShapeFile</exception>
	<exception cref="T:System.Exception" caption="LayerIndexOutOfRange">Layer specified by aLayerIndex does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="P:atcMwGisUtility.GisUtil.FieldType(System.Int32,System.Int32)">
	<summary>Type of a field from a field index and a layer index</summary>
	<param name="aFieldIndex">
		<para>Index of field</para>
	</param>
	<param name="aLayerIndex">
		<para>Index of layer (Defaults to current layer)</para>
	</param>
	<exception cref="T:System.Exception" caption="FieldIndexOutOfRange">Field specified by aFieldIndex does not exist</exception>
	<exception cref="T:System.Exception" caption="LayerNotShapeFile">Layer specified by aLayerIndex is not a ShapeFile</exception>
	<exception cref="T:System.Exception" caption="LayerIndexOutOfRange">Layer specified by aLayerIndex does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="M:atcMwGisUtility.GisUtil.FieldValue(System.Int32,System.Int32,System.Int32)">
	<summary>Value of a field from a field index, a feature index and a layer index</summary>
	<param name="aFieldIndex">
		<para>Index of field</para>
	</param>
	<param name="aFeatureIndex">
		<para>Index of feature</para>
	</param>
	<param name="aLayerIndex">
		<para>Index of layer (Defaults to current layer)</para>
	</param>
	<exception cref="T:System.Exception" caption="FeatureIndexOutOfRange">Feature specified by aFeatureIndex does not exist</exception>
	<exception cref="T:System.Exception" caption="FieldIndexOutOfRange">Field specified by aFieldIndex does not exist</exception>
	<exception cref="T:System.Exception" caption="LayerNotShapeFile">Layer specified by aLayerIndex is not a ShapeFile</exception>
	<exception cref="T:System.Exception" caption="LayerIndexOutOfRange">Layer specified by aLayerIndex does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="P:atcMwGisUtility.GisUtil.GridLayerMinimum(System.Int32)">
	<summary>Minimum value in a grid from a LayerIndex</summary>
	<param name="aLayerIndex">
		<para>Index of desired layer containing grid (defaults to Current Layer)</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerNotGrid">Layer specified by aLayerIndex is not a Grid</exception>
	<exception cref="T:System.Exception" caption="LayerIndexOutOfRange">Layer specified by aLayerIndex does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="P:atcMwGisUtility.GisUtil.GridLayerMaximum(System.Int32)">
	<summary>Maximum value in a grid from a LayerIndex</summary>
	<param name="aLayerIndex">
		<para>Index of desired layer containing grid (defaults to Current Layer)</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerNotGrid">Layer specified by aLayerIndex is not a Grid</exception>
	<exception cref="T:System.Exception" caption="LayerIndexOutOfRange">Layer specified by aLayerIndex does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="M:atcMwGisUtility.GisUtil.FeatureArea(System.Int32,System.Int32)">
	<summary>Area of a polygon from a LayerIndex and a FeatureIndex</summary>
	<param name="aLayerIndex">
		<para>Index of desired layer containing grid (defaults to Current Layer)</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerNotPolygonShapeFile">Layer specified by aLayerIndex is not a polygon ShapeFile</exception>
	<exception cref="T:System.Exception" caption="FeatureIndexOutOfRange">Feature Index Out of Range</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="M:atcMwGisUtility.GisUtil.EndPointsOfLine(System.Int32,System.Int32,System.Double@,System.Double@,System.Double@,System.Double@)">
	<summary>Determine end points of a shape</summary>
	<param name="aLayerIndex">
		<para>Index of layer containing ShapeFile</para>
	</param>
	<param name="aFeatureIndex">
		<para>Index of feature</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerNotShapeFile">Layer specified by aLayerIndex is not a ShapeFile</exception>
	<exception cref="T:System.Exception" caption="FeatureIndexOutOfRange">Feature Index Out of Range</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException" caption="MappingObjectNotSet">Mapping Object Not Set</exception>
</member><member name="M:atcMwGisUtility.GisUtil.PointsOfLine(System.Int32,System.Int32,System.Double[]@,System.Double[]@)">
	<summary>
 Determine a points of a line
 </summary>
	<param name="aLayerIndex"></param>
	<param name="aFeatureIndex"></param>
	<param name="aX"></param>
	<param name="aY"></param>
	<remarks></remarks>
</member><member name="M:atcMwGisUtility.GisUtil.PointXY(System.Int32,System.Int32,System.Double@,System.Double@)">
	<summary>Determine first point of a shape</summary>
	<param name="aLayerIndex">
		<para>Index of layer containing ShapeFile</para>
	</param>
	<param name="aFeatureIndex">
		<para>Index of feature</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerNotShapeFile">Layer specified by aLayerIndex is not a ShapeFile</exception>
	<exception cref="T:System.Exception" caption="FeatureIndexOutOfRange">Feature Index Out of Range</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException" caption="MappingObjectNotSet">Mapping Object Not Set</exception>
</member><member name="M:atcMwGisUtility.GisUtil.RemoveFeature(System.Int32,System.Int32)">
	<summary>Remove feature from a ShapeFile</summary>
	<param name="aLayerIndex">
		<para>Index of layer containing ShapeFile</para>
	</param>
	<param name="aFeatureIndex">
		<para>Index of feature to be removed</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerNotShapeFile">Layer specified by aLayerIndex is not a ShapeFile</exception>
	<exception cref="T:System.Exception" caption="FeatureIndexOutOfRange">Feature Index Out of Range</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="M:atcMwGisUtility.GisUtil.SetFeatureValue(System.Int32,System.Int32,System.Int32,System.Object)">
	<summary>Set value of a field in a feature in a ShapeFile</summary>
	<param name="aLayerIndex">
		<para>Index of layer containing ShapeFile</para>
	</param>
	<param name="aFieldIndex">
		<para>Index of field to change</para>
	</param>
	<param name="aFeatureIndex">
		<para>Index of feature containing field to change</para>
	</param>
	<param name="aValue">
		<para>New value for field</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerNotShapeFile">Layer specified by aLayerIndex is not a ShapeFile</exception>
	<exception cref="T:System.Exception" caption="FeatureIndexOutOfRange">Feature Index Out of Range</exception>
	<exception cref="T:System.Exception" caption="FieldIndexOutOfRange">Field specified by aFieldIndex does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="P:atcMwGisUtility.GisUtil.ProjectFileName">
	<summary>Obtain file name of currently loaded project</summary>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="M:atcMwGisUtility.GisUtil.ProjectProjection">
	<summary>
 Projection string describing the current map projection for the open project
 </summary>
	<returns>PROJ 4 string</returns>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="M:atcMwGisUtility.GisUtil.ProjectPoint(System.Double@,System.Double@,System.String,System.String)">
	<summary>
 Changes aX and aY arguments from aInputProjection to aOutputProjection
 </summary>
	<param name="aX">X or longitude value (input and output)</param>
	<param name="aY">Y or latitude value (input and output)</param>
	<param name="aInputProjection">PROJ 4 string describing projection of aX and aY as they are passed in</param>
	<param name="aOutputProjection">PROJ 4 string describing new projection of aX and aY as they are passed back</param>
</member><member name="M:atcMwGisUtility.GisUtil.PointInPolygon(System.Int32,System.Int32,System.Int32)">
	<summary>
 Given a point layer and index and a polygon layer, return the index of the polygon this point is in (or -1 if is in none)
 </summary>
</member><member name="M:atcMwGisUtility.GisUtil.PointInPolygonXY(System.Double,System.Double,System.Int32)">
	<summary>
 Given a point xy and a polygon layer, return the index of the polygon this point is in (or -1 if is in none)
 </summary>
</member><member name="M:atcMwGisUtility.GisUtil.AddLayer(System.String,System.String)">
	<summary>
 Given a shape file name, add it to the map; Return true if the layer is already there or successfully added
 </summary>
</member><member name="M:atcMwGisUtility.GisUtil.IsLayer(System.String)">
	<summary>Layer part of project?</summary>
	<param name="aLayerName">
		<para>Name of layer to compare to layeres in project</para>
	</param>
</member><member name="M:atcMwGisUtility.GisUtil.IsLayerByFileName(System.String)">
	<summary>Layer part of project?</summary>
	<param name="aLayerFileName">
		<para>file name of layer to compare to layers in project</para>
	</param>
</member><member name="P:atcMwGisUtility.GisUtil.LayerVisible(System.String)">
	<summary>Layer visible flag</summary>
	<param name="aLayerName">
		<para>Name of layer</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerNameNameNotRecognized">Layer specified by aLayerName does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="P:atcMwGisUtility.GisUtil.LayerVisible(System.Int32)">
	<summary>Layer visible flag</summary>
	<param name="aLayerIndex">
		<para>Index of layer (Defaults to current layer)</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerIndexOutOfRange">Layer specified by aLayerIndex does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="M:atcMwGisUtility.GisUtil.RemoveLayer(System.Int32)">
	<summary>Remove layer</summary>
	<param name="aLayerIndex">
		<para>Index of layer (Defaults to current layer)</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerIndexOutOfRange">Layer specified by aLayerIndex does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="M:atcMwGisUtility.GisUtil.TabulateAreas(System.Int32,System.Int32,System.Double[0:,0:]@,System.Double[0:,0:]@,System.Double[0:,0:]@,System.String)">
	<summary>Given a grid and a polygon layer, calculate the area of each grid category 
          within each polygon.  Output array contains area of each grid category
          and polygon combination.</summary>
	<remark>This function can be accomplished in MapWindow by 
         looping through each grid cell and counting the 
         number of cells of each grid category within each 
         feature. The MapWinGIS calls to use include the Grid 
         Property Value, the GridHeader Properties dX, dY, XllCenter, 
         and YllCenter, and the Shapefile Function PointInShapefile.</remark>
	<param name="aGridLayerIndex">
		<para>Index of grid layer containing values</para>
	</param>
	<param name="aPolygonLayerIndex">
		<para>Index of polgon layer to calculate areas for</para>
	</param>
	<param name="aAreaGridPoly">
		<para>2-D Array used to store output areas</para>
	</param>
</member><member name="M:atcMwGisUtility.GisUtil.GridZonalStatistics(System.Int32,System.Int32)">
	<summary>
 Compute statistics per zone
 </summary>
	<param name="aZoneGridIndex">Index of grid whose values are zone numbers, e.g. subbasins</param>
	<param name="aValueGridIndex">Index of grid to compute statistics from, by zone</param>
	<returns>atcCollection of atcDataAttributes, indexed by zone number. Each atcDataAttributes item contains statistics for one zone.</returns>
	<remarks></remarks>
</member><member name="M:atcMwGisUtility.GisUtil.GridZonalStatisticsMismatched(System.Int32,System.Int32)">
	<summary>
 Compute statistics per zone
 </summary>
	<param name="aZoneGridIndex">Index of grid whose values are zone numbers, e.g. subbasins</param>
	<param name="aValueGridIndex">Index of grid to compute statistics from, by zone</param>
	<returns>atcCollection of atcDataAttributes, indexed by zone number. Each atcDataAttributes item contains statistics for one zone.</returns>
	<remarks>Grids do not have to be same resolution or area.
 Overlapping area will be used and the finer grid will control the level of detail of the computation.</remarks>
</member><member name="M:atcMwGisUtility.GisUtil.Overlay(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
	<summary>Overlay Layer1 and Layer2 (eg landuse and subbasins), creating a polygon layer containing features from both layers</summary>
	<param name="aLayer1Name">
		<para>Name of first layer to overlay</para>
	</param>
	<param name="aLayer1FieldName">
		<para>Name of field in first layer to overlay</para>
	</param>
	<param name="aLayer2Name">
		<para>Name of second layer to overlay</para>
	</param>
	<param name="aLayer2FieldName">
		<para>Name of field in second layer to overlay</para>
	</param>
	<param name="aOutputLayerName">
		<para>Name of output layer</para>
	</param>
	<param name="aCreateNew">
		<para>Flag, true if a new output shape file is desired, false if append existing file is desired</para>
	</param>
</member><member name="M:atcMwGisUtility.GisUtil.Overlay(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
	<summary>Overlay Layer1 and Layer2 (eg landuse and subbasins), creating a polygon layer containing features from both layers</summary>
	<param name="aLayer1Index">
		<para>Index of first layer to overlay</para>
	</param>
	<param name="aLayer1FieldIndex">
		<para>Index of field in first layer to overlay</para>
	</param>
	<param name="aLayer2Index">
		<para>Index of second layer to overlay</para>
	</param>
	<param name="aLayer2FieldIndex">
		<para>Index of field in second layer to overlay</para>
	</param>
	<param name="aOutputLayerName">
		<para>Name of output layer</para>
	</param>
	<param name="aCreateNew">
		<para>Flag, true if a new output shape file is desired, false if append existing file is desired</para>
	</param>
</member><member name="M:atcMwGisUtility.GisUtil.TabulatePolygonAreas(System.Int32,System.Int32,System.Int32,Microsoft.VisualBasic.Collection,System.Double[0:,0:]@)">
	<summary>Given two polygon layers, calculate the area of each polygon of the 
          first layer with each polygon of the second layer. 
          Output array contains area of each polygon combination.</summary>
	<param name="aPolygonLayer1Index">
		<para>Index of first polygon layer to calculate areas for</para>
	</param>
	<param name="aLayer1FieldIndex">
		<para>Index of id field in first layer (eg land use code)</para>
	</param>
	<param name="aPolygonLayer2Index">
		<para>Index of second polygon layer to calculate areas for</para>
	</param>
	<param name="aSelectedLayer2Indexes">
		<para>Collection of polygon indexes of second polygon layer to calculate areas for</para>
	</param>
	<param name="aArea12">
		<para>2-D Array used to store output areas</para>
	</param>
</member><member name="M:atcMwGisUtility.GisUtil.MergeSelectedShapes(System.Int32,System.Int32)">
	<summary>
 Merge all selected shapes in one shape file and append merged shape to destination shape file
 </summary>
	<param name="aLayerIndexSource">Index of source layer having selected shaped</param>
	<param name="aLayerIndexDest">Index of destination layer where merged shape will be added</param>
	<returns></returns>
	<remarks>Programmed by LCW for GBMM project</remarks>
</member><member name="M:atcMwGisUtility.GisUtil.FilterShape(MapWinGIS.Shape@,System.Single)">
	<summary>
 Remove all vertices that are closer than specified distance
 </summary>
	<param name="shp">Polygon shape to be filtered</param>
	<param name="FilterSize">Minimum distance between adjacent points</param>
	<returns>True if successful</returns>
	<remarks>Programmed by LCW for GBMM project</remarks>
</member><member name="M:atcMwGisUtility.GisUtil.CreatePointShapefile(System.String,Microsoft.VisualBasic.Collection,Microsoft.VisualBasic.Collection,Microsoft.VisualBasic.Collection,Microsoft.VisualBasic.Collection,System.String)">
	<summary>
 given a shapefile name, point coordinates, and attributes, build a new point shapefile
 </summary>
	<param name="aShapefileName"></param>
	<param name="aXPositions"></param>
	<param name="aYPositions"></param>
	<param name="aAttributeNames"></param>
	<param name="aAttributeValues"></param>
	<param name="aOutputProjection"></param>
	<remarks></remarks>
</member><member name="M:atcMwGisUtility.GisUtil.UniqueValuesRenderer(System.Int32,System.Int32,Microsoft.VisualBasic.Collection,Microsoft.VisualBasic.Collection)">
	<summary>
 Create unique color scheme for shapefile layer
 </summary>
	<param name="aLayerIndex">Index of desired layer</param>
	<param name="aFieldIndex">Index of desired field</param>
</member><member name="P:atcMwGisUtility.GisUtil.ShapefileProjectionString(System.Int32)">
	<summary>Shapefile projection string from a layer index</summary>
	<param name="aLayerIndex">
		<para>Index of layer (Defaults to current layer)</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerIndexOutOfRange">Layer specified by aLayerIndex does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
</member><member name="P:atcMwGisUtility.GisUtil.MapUnits">
	<summary>
 Get currently active project mapping units (e.g., "Feet")
 </summary>
	<remarks>Added by Chris Wilson 11/24/2008</remarks>
</member><member name="P:atcMwGisUtility.GisUtil.LayerFileName(System.String)">
	<summary>Layer file name from a layer name</summary>
	<param name="aLayerName">
		<para>Name of layer</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerIndexOutOfRange">Layer specified by aLayerIndex does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
	<remarks>Added by Chris Wilson 11/25/2008</remarks>
</member><member name="P:atcMwGisUtility.GisUtil.LayerType(System.String)">
	<summary>Layer type from a layer name</summary>
	<param name="aLayerName">
		<para>Name of layer.</para>
	</param>
	<exception cref="T:System.Exception" caption="LayerIndexOutOfRange">Layer specified by aLayerIndex does not exist</exception>
	<exception cref="T:atcMwGisUtility.MappingObjectNotSetException">Mapping Object Not Set</exception>
	<remarks>Added by Chris Wilson 11/25/2008</remarks>
</member><member name="M:atcMwGisUtility.GisUtil.ZoomToLayerExtents(System.Int32)">
	<summary>
 Zoom to the extents of the specified layer
 </summary>
	<param name="aLayerIndex">Index of layer.</param>
	<remarks>Added by Chris Wilson 11/25/2008</remarks>
</member><member name="M:atcMwGisUtility.GisUtil.ZoomToLayerExtents(System.String)">
	<summary>
 Zoom to the extents of the specified layer name
 </summary>
	<param name="aLayerName">Name of layer.</param>
	<remarks>Added by Chris Wilson 11/25/2008</remarks>
</member><member name="M:atcMwGisUtility.GisUtil.TabulatePolygonAreas(System.Int32,System.Int32,System.Int32)">
	<summary>Given two polygon layers, calculate the area of each polygon of the 
          first layer within each polygon of the second layer. 
          Output array contains area of each polygon combination.</summary>
	<param name="aPolygonLayer1Index">
		<para>Index of first polygon layer to calculate areas for</para>
	</param>
	<param name="aLayer1FieldIndex">
		<para>Index of id field in first layer (eg land use code)</para>
	</param>
	<param name="aPolygonLayer2Index">
		<para>Index of second polygon layer to calculate areas for</para>
	</param>
	<returns>Array (one item per Polygon2 shape) of dictionaries (key is Layer1 field value, value is total area)</returns>
	<remarks>Added by Chris Wilson 11/24/2008 because original version required numeric entries in field</remarks>
</member><member name="M:atcMwGisUtility.GisUtil.TabulateAreas(System.Int32,System.Int32)">
	<summary>Given a grid and a polygon layer, calculate the area of each grid category 
          within each polygon.  Output dictionary contains area of areas;
          key is grid value, value is array of total areas (one for each shape in basin).</summary>
	<remark>This function can be accomplished in MapWindow by 
         looping through each grid cell and counting the 
         number of cells of each grid category within each 
         feature. The MapWinGIS calls to use include the Grid 
         Property Value, the GridHeader Properties dX, dY, XllCenter, 
         and YllCenter, and the Shapefile Function PointInShapefile.</remark>
	<param name="aGridLayerIndex">
		<para>Index of grid layer containing values</para>
	</param>
	<param name="aPolygonLayerIndex">
		<para>Index of polygon layer to calculate areas for</para>
	</param>
	<returns>Sorted dictionary containing array of areas (key is grid value, value is array of total areas (one for each shape in basin))</returns>
	<remarks>Added by Chris Wilson 11/24/2008 to make consistent with TabulatePolygonAreas</remarks>
</member><member name="F:atcMwGisUtility.GisUtil.Cancel">
	<summary>
 Can be used to cancel long-running calcs
 </summary>
	<remarks>Caller can monitor some event and set this true to cancel routine</remarks>
</member><member name="E:atcMwGisUtility.GisUtil.Progress">
	<summary>
 Can be used to report progress in long-running routine when logger.progress is not enough
 </summary>
	<remarks></remarks>
</member><member name="M:atcMwGisUtility.GisUtil.TabulateAreas(System.String,System.String,System.String,System.String)">
	<summary>Given a shapefile (landuse) and polygon (subbasin) layers, calculate the area of each landuse category 
          within each subbasin polygon.</summary>
	<remark>This function can be accomplished in MapWindow by 
         looping through each grid cell and counting the 
         number of cells of each grid category within each 
         feature. The MapWinGIS calls to use include the Grid 
         Property Value, the GridHeader Properties dX, dY, XllCenter, 
         and YllCenter, and the Shapefile Function PointInShapefile.</remark>
	<param name="SubbasinLayerName">Name of shapefile (e.g., subbasins)</param>
	<param name="SubbasinFieldName">Name of field containing subbasin ID or Name</param>
	<param name="LanduseLayerName">Name of grid file (e.g., landuse)</param>
	<returns>Output is dictionary (key is polygon ID) of dictionaries (key is grid value, value is area).</returns>
	<remarks>Added by Chris Wilson 5/24/2009</remarks>
</member><member name="M:atcMwGisUtility.GisUtil.TabulateAreas(System.String,System.String,System.String)">
	<summary>Given a grid (landuse) and polygon (subbasin) layers, calculate the area of each grid category 
          within each polygon.</summary>
	<remark>This function can be accomplished in MapWindow by 
         looping through each grid cell and counting the 
         number of cells of each grid category within each 
         feature. The MapWinGIS calls to use include the Grid 
         Property Value, the GridHeader Properties dX, dY, XllCenter, 
         and YllCenter, and the Shapefile Function PointInShapefile.</remark>
	<param name="SubbasinLayerName">Name of shapefile (e.g., subbasins)</param>
	<param name="SubbasinFieldName">Name of field containing subbasin ID or Name</param>
	<param name="LanduseLayerName">Name of grid file (e.g., landuse)</param>
	<returns>Output is dictionary (key is polygon ID) of dictionaries (key is grid value, value is area).</returns>
	<remarks>Added by Chris Wilson 5/24/2009</remarks>
</member><member name="M:atcMwGisUtility.GisUtil.UniqueValuesRenderer(System.Int32)">
	<summary>
 Create unique color scheme for grid layer
 </summary>
	<param name="aLayerIndex"></param>
	<remarks>Added by Chris Wilson 03/26/09 to provide capability for grid layers</remarks>
</member><member name="T:atcMwGisUtility.GisUtil">
	<remarks>Copyright 2005 AQUA TERRA Consultants - Royalty-free use permitted under open source license</remarks>
	<summary>GIS Utilities implemented thru MapWindow</summary>
</member><member name="T:atcMwGisUtility.MappingObjectNotSetException">
	<remarks>Copyright 2006 AQUA TERRA Consultants - Royalty-free use permitted under open source license</remarks>
	<summary>The Map Window Object has not been set with code like "GisUtil.MappingObject = ?"</summary>
</member>
</members>
</doc>